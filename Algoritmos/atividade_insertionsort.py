# -*- coding: utf-8 -*-
"""Atividade InsertionSort

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1U-2HqFrfDI6CQvxyy870GYEanZkSLjnn

Gerando os números
"""

import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt

lista1 = np.random.randint(10000, 50000, 1000)
lista2 = np.random.randint(10000, 50000, 2000)
lista3 = np.random.randint(10000, 50000, 4000)
lista4 = np.random.randint(10000, 50000, 6000)
lista5 = np.random.randint(10000, 50000, 8000)
lista6 = np.random.randint(10000, 50000, 10000)

"""Implementando InsertionSort"""

def insertionsort(lista):
  for i in range(1, len(lista)):
    pivo = lista[i]
    j = i - 1
    while j >= 0 and lista[j] > pivo:
      lista[j + 1] = lista[j]
      j -= 1
    lista[j + 1] = pivo

"""Copiando as listas em 3 listas diferentes"""

lista1_insertion = lista1.copy()
lista2_insertion = lista2.copy()
lista3_insertion = lista3.copy()
lista4_insertion = lista4.copy()
lista5_insertion = lista5.copy()
lista6_insertion = lista6.copy()

lista1_bubble = lista1.copy()
lista2_bubble = lista2.copy()
lista3_bubble = lista3.copy()
lista4_bubble = lista4.copy()
lista5_bubble = lista5.copy()
lista6_bubble = lista6.copy()

lista1_selection = lista1.copy()
lista2_selection = lista2.copy()
lista3_selection = lista3.copy()
lista4_selection = lista4.copy()
lista5_selection = lista5.copy()
lista6_selection = lista6.copy()

"""Calculando o tempo do InsertionSort"""

import time

start_time = time.time()
insertionsort(lista1_insertion)
end_time = time.time()
tempo1medio = end_time - start_time

start_time = time.time()
insertionsort(lista1_insertion)
end_time = time.time()
tempo1melhor = end_time - start_time

lista1piorcaso = lista1_insertion[::-1]
start_time = time.time()
insertionsort(lista1piorcaso)
end_time = time.time()
tempo1pior = end_time - start_time

start_time = time.time()
insertionsort(lista2_insertion)
end_time = time.time()
tempo2medio = end_time - start_time

start_time = time.time()
insertionsort(lista2_insertion)
end_time = time.time()
tempo2melhor = end_time - start_time

lista2piorcaso = lista2_insertion[::-1]
start_time = time.time()
insertionsort(lista2piorcaso)
end_time = time.time()
tempo2pior = end_time - start_time

start_time = time.time()
insertionsort(lista3_insertion)
end_time = time.time()
tempo3medio = end_time - start_time

start_time = time.time()
insertionsort(lista3_insertion)
end_time = time.time()
tempo3melhor = end_time - start_time

lista3piorcaso = lista3_insertion[::-1]
start_time = time.time()
insertionsort(lista3piorcaso)
end_time = time.time()
tempo3pior = end_time - start_time

start_time = time.time()
insertionsort(lista4_insertion)
end_time = time.time()
tempo4medio = end_time - start_time

start_time = time.time()
insertionsort(lista4_insertion)
end_time = time.time()
tempo4melhor = end_time - start_time

start_time = time.time()
lista4piorcaso = lista4_insertion[::-1]
insertionsort(lista4piorcaso)
end_time = time.time()
tempo4pior = end_time - start_time

start_time = time.time()
insertionsort(lista5_insertion)
end_time = time.time()
tempo5medio = end_time - start_time

start_time = time.time()
insertionsort(lista5_insertion)
end_time = time.time()
tempo5melhor = end_time - start_time

start_time = time.time()
lista5piorcaso = lista5_insertion[::-1]
insertionsort(lista5piorcaso)
end_time = time.time()
tempo5pior = end_time - start_time

start_time = time.time()
insertionsort(lista6_insertion)
end_time = time.time()
tempo6medio = end_time - start_time

start_time = time.time()
insertionsort(lista6_insertion)
end_time = time.time()
tempo6melhor = end_time - start_time

lista6piorcaso = lista6_insertion[::-1]
start_time = time.time()
insertionsort(lista6piorcaso)
end_time = time.time()
tempo6pior = end_time - start_time

"""Importando os algoritmos anteriores (BubbleSort, SelectionSort)"""

def bubblesort(lista):
    for i in range(len(lista)-1):
      for j in range(len(lista)-1):

        if lista[j] > lista[j+1]:
          aux = lista[j]
          lista[j] = lista[j+1]
          lista[j+1] = aux

    return lista


def selectionsort(lista):
  for i in range(len(lista)):
    min = i
    for j in range(i+1, len(lista)):
      if lista[j] < lista[min]:
        min = j

"""Calculando os tempos dos algoritmos anteriores"""

import time

start_time = time.time()
bubblesort(lista1_bubble)
end_time = time.time()
tempo1mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista1_bubble)
end_time = time.time()
tempo1melhorbubble = end_time - start_time

lista1piorcaso = lista1_bubble[::-1]
start_time = time.time()
bubblesort(lista1piorcaso)
end_time = time.time()
tempo1piorbubble = end_time - start_time

start_time = time.time()
bubblesort(lista2_bubble)
end_time = time.time()
tempo2mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista2_bubble)
end_time = time.time()
tempo2melhorbubble = end_time - start_time

lista2piorcaso = lista2_bubble[::-1]
start_time = time.time()
bubblesort(lista2piorcaso)
end_time = time.time()
tempo2piorbubble = end_time - start_time

start_time = time.time()
bubblesort(lista3_bubble)
end_time = time.time()
tempo3mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista3_bubble)
end_time = time.time()
tempo3melhorbubble = end_time - start_time

lista3piorcaso = lista3_bubble[::-1]
start_time = time.time()
bubblesort(lista3piorcaso)
end_time = time.time()
tempo3piorbubble = end_time - start_time

start_time = time.time()
bubblesort(lista4_bubble)
end_time = time.time()
tempo4mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista4_bubble)
end_time = time.time()
tempo4melhorbubble = end_time - start_time

lista4piorcaso = lista4_bubble[::-1]
start_time = time.time()
bubblesort(lista4piorcaso)
end_time = time.time()
tempo4piorbubble = end_time - start_time

start_time = time.time()
bubblesort(lista5_bubble)
end_time = time.time()
tempo5mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista5_bubble)
end_time = time.time()
tempo5melhorbubble = end_time - start_time

lista5piorcaso = lista5_bubble[::-1]
start_time = time.time()
bubblesort(lista5piorcaso)
end_time = time.time()
tempo5piorbubble = end_time - start_time

start_time = time.time()
bubblesort(lista6_bubble)
end_time = time.time()
tempo6mediobubble = end_time - start_time

start_time = time.time()
bubblesort(lista6_bubble)
end_time = time.time()
tempo6melhorbubble = end_time - start_time

lista6piorcaso = lista6_bubble[::-1]
start_time = time.time()
bubblesort(lista6piorcaso)
end_time = time.time()
tempo6piorbubble = end_time - start_time




start_time = time.time()
selectionsort(lista1_selection)
end_time = time.time()
tempo1medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista1_selection)
end_time = time.time()
tempo1melhorselection = end_time - start_time

lista1piorcaso = lista1_selection[::-1]
start_time = time.time()
selectionsort(lista1piorcaso)
end_time = time.time()
tempo1piorselection = end_time - start_time

start_time = time.time()
selectionsort(lista2_selection)
end_time = time.time()
tempo2medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista2_selection)
end_time = time.time()
tempo2melhorselection = end_time - start_time

lista2piorcaso = lista2_selection[::-1]
start_time = time.time()
selectionsort(lista2piorcaso)
end_time = time.time()
tempo2piorselection = end_time - start_time

start_time = time.time()
selectionsort(lista3_selection)
end_time = time.time()
tempo3medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista3_selection)
end_time = time.time()
tempo3melhorselection = end_time - start_time

lista3piorcaso = lista3_selection[::-1]
start_time = time.time()
selectionsort(lista3piorcaso)
end_time = time.time()
tempo3piorselection = end_time - start_time

start_time = time.time()
selectionsort(lista4_selection)
end_time = time.time()
tempo4medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista4_selection)
end_time = time.time()
tempo4melhorselection = end_time - start_time

lista4piorcaso = lista4_selection[::-1]
start_time = time.time()
selectionsort(lista4piorcaso)
end_time = time.time()
tempo4piorselection = end_time - start_time

start_time = time.time()
selectionsort(lista5_selection)
end_time = time.time()
tempo5medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista5_selection)
end_time = time.time()
tempo5melhorselection = end_time - start_time

lista5piorcaso = lista5_selection[::-1]
start_time = time.time()
selectionsort(lista5piorcaso)
end_time = time.time()
tempo5piorselection = end_time - start_time

start_time = time.time()
selectionsort(lista6_selection)
end_time = time.time()
tempo6medioselection = end_time - start_time

start_time = time.time()
selectionsort(lista6_selection)
end_time = time.time()
tempo6melhorselection = end_time - start_time

lista6piorcaso = lista6_selection[::-1]
start_time = time.time()
selectionsort(lista6piorcaso)
end_time = time.time()
tempo6piorselection = end_time - start_time

"""Construindo o gráfico"""

tamanhos = [1000, 2000, 4000, 6000, 8000, 10000]

temposmedio = [tempo1medio, tempo2medio, tempo3medio, tempo4medio, tempo5medio, tempo6medio]
temposmelhor = [tempo1melhor, tempo2melhor, tempo3melhor, tempo4melhor, tempo5melhor, tempo6melhor]
tempospior = [tempo1pior, tempo2pior, tempo3pior, tempo4pior, tempo5pior, tempo6pior]
plt.plot(temposmedio, tamanhos, marker='o', label='Caso Médio')
plt.plot(temposmelhor, tamanhos, marker='o', label='Melhor Caso')
plt.plot(tempospior, tamanhos, marker='o', label='Pior Caso')

temposmediobubble = [tempo1mediobubble, tempo2mediobubble, tempo3mediobubble, tempo4mediobubble, tempo5mediobubble, tempo6mediobubble]
temposmelhorbubble = [tempo1melhorbubble, tempo2melhorbubble, tempo3melhorbubble, tempo4melhorbubble, tempo5melhorbubble, tempo6melhorbubble]
tempospiorbubble = [tempo1piorbubble, tempo2piorbubble, tempo3piorbubble, tempo4piorbubble, tempo5piorbubble, tempo6piorbubble]
plt.plot(temposmediobubble, tamanhos, marker='o', label='Caso Médio BubbleSort')
plt.plot(temposmelhorbubble, tamanhos, marker='o', label='Melhor Caso BubbleSort')
plt.plot(tempospiorbubble, tamanhos, marker='o', label='Pior Caso BubbleSort')

temposmedioselection = [tempo1medioselection, tempo2medioselection, tempo3medioselection, tempo4medioselection, tempo5medioselection, tempo6medioselection]
temposmelhorselection = [tempo1melhorselection, tempo2melhorselection, tempo3melhorselection, tempo4melhorselection, tempo5melhorselection, tempo6melhorselection]
tempospiorselection = [tempo1piorselection, tempo2piorselection, tempo3piorselection, tempo4piorselection, tempo5piorselection, tempo6piorselection]
plt.plot(temposmedioselection, tamanhos, marker='o', label='Caso Médio SelectionSort')
plt.plot(temposmelhorselection, tamanhos, marker='o', label='Melhor Caso SelectionSort')
plt.plot(tempospiorselection, tamanhos, marker='o', label='Pior Caso SelectionSort')


plt.xlabel('Tempo(s)')
plt.ylabel('Tamanho da Lista')
plt.title('Comparação de Tempo de Execução dos Algoritmos')
plt.legend()
plt.show()